{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///src/board.ts","webpack:///src/fen.ts","webpack:///src/types.ts","webpack:///./src/App.vue?5b59","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///src/squareSet.ts","webpack:///src/util.ts","webpack:///src/attacks.ts","webpack:///src/setup.ts","webpack:///src/chess.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ROLES","role","InvalidFen","index","file","rank","result_1","Result","e","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","staticStyle","on","$event","setFen","currentFen","showMove","staticRenderFns","components","methods","document","getElementById","blob","promote","confirm","created","fens","component","Vue","el","render","h","App","startFen","posFromFen","fen","setup","parseFen","unwrap","pos","Chess","fromSetup","posToFen","makeFen","toSetup","makeUciMove","uci","parseUci","play","click","showmove","waitShowMove","Promise","resolve","current","setInterval","JSON","parse","fetchBook","fetch","then","response","json","depth","score","showScore","text","innerHTML","currFen","san","history","moves","findIndex","item","alert","setTimeout","bonus","total","white","draws","black","rand","Math","floor","random","selected","bswap32","hi","delta","sq","tabulate","KING_ATTACKS","computeRange","KNIGHT_ATTACKS","PAWN_ATTACKS","squareSet_1","SquareSet","between","IllegalSetup","kingCastlesTo","color","a","ctx"],"mappings":"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","file":"js/app.925c25a8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Board = void 0;\nconst types_1 = require(\"./types\");\nconst squareSet_1 = require(\"./squareSet\");\nclass Board {\n    constructor() { }\n    static default() {\n        const board = new Board();\n        board.reset();\n        return board;\n    }\n    static racingKings() {\n        const board = new Board();\n        board.occupied = new squareSet_1.SquareSet(0xffff, 0);\n        board.promoted = squareSet_1.SquareSet.empty();\n        board.white = new squareSet_1.SquareSet(0xf0f0, 0);\n        board.black = new squareSet_1.SquareSet(0x0f0f, 0);\n        board.pawn = squareSet_1.SquareSet.empty();\n        board.knight = new squareSet_1.SquareSet(0x1818, 0);\n        board.bishop = new squareSet_1.SquareSet(0x2424, 0);\n        board.rook = new squareSet_1.SquareSet(0x4242, 0);\n        board.queen = new squareSet_1.SquareSet(0x0081, 0);\n        board.king = new squareSet_1.SquareSet(0x8100, 0);\n        return board;\n    }\n    static horde() {\n        const board = new Board();\n        board.occupied = new squareSet_1.SquareSet(4294967295, 4294901862);\n        board.promoted = squareSet_1.SquareSet.empty();\n        board.white = new squareSet_1.SquareSet(4294967295, 102);\n        board.black = new squareSet_1.SquareSet(0, 4294901760);\n        board.pawn = new squareSet_1.SquareSet(4294967295, 16711782);\n        board.knight = new squareSet_1.SquareSet(0, 1107296256);\n        board.bishop = new squareSet_1.SquareSet(0, 603979776);\n        board.rook = new squareSet_1.SquareSet(0, 2164260864);\n        board.queen = new squareSet_1.SquareSet(0, 134217728);\n        board.king = new squareSet_1.SquareSet(0, 268435456);\n        return board;\n    }\n    reset() {\n        this.occupied = new squareSet_1.SquareSet(0xffff, 4294901760);\n        this.promoted = squareSet_1.SquareSet.empty();\n        this.white = new squareSet_1.SquareSet(0xffff, 0);\n        this.black = new squareSet_1.SquareSet(0, 4294901760);\n        this.pawn = new squareSet_1.SquareSet(0xff00, 16711680);\n        this.knight = new squareSet_1.SquareSet(0x42, 1107296256);\n        this.bishop = new squareSet_1.SquareSet(0x24, 603979776);\n        this.rook = new squareSet_1.SquareSet(0x81, 2164260864);\n        this.queen = new squareSet_1.SquareSet(0x8, 134217728);\n        this.king = new squareSet_1.SquareSet(0x10, 268435456);\n    }\n    static empty() {\n        const board = new Board();\n        board.clear();\n        return board;\n    }\n    clear() {\n        this.occupied = squareSet_1.SquareSet.empty();\n        this.promoted = squareSet_1.SquareSet.empty();\n        for (const color of types_1.COLORS)\n            this[color] = squareSet_1.SquareSet.empty();\n        for (const role of types_1.ROLES)\n            this[role] = squareSet_1.SquareSet.empty();\n    }\n    clone() {\n        const board = new Board();\n        board.occupied = this.occupied;\n        board.promoted = this.promoted;\n        for (const color of types_1.COLORS)\n            board[color] = this[color];\n        for (const role of types_1.ROLES)\n            board[role] = this[role];\n        return board;\n    }\n    equalsIgnorePromoted(other) {\n        if (!this.white.equals(other.white))\n            return false;\n        return types_1.ROLES.every(role => this[role].equals(other[role]));\n    }\n    equals(other) {\n        return this.equalsIgnorePromoted(other) && this.promoted.equals(other.promoted);\n    }\n    getColor(square) {\n        if (this.white.has(square))\n            return 'white';\n        if (this.black.has(square))\n            return 'black';\n        return;\n    }\n    getRole(square) {\n        for (const role of types_1.ROLES) {\n            if (this[role].has(square))\n                return role;\n        }\n        return;\n    }\n    get(square) {\n        const color = this.getColor(square);\n        if (!color)\n            return;\n        const role = this.getRole(square);\n        const promoted = this.promoted.has(square);\n        return { color, role, promoted };\n    }\n    take(square) {\n        const piece = this.get(square);\n        if (piece) {\n            this.occupied = this.occupied.without(square);\n            this[piece.color] = this[piece.color].without(square);\n            this[piece.role] = this[piece.role].without(square);\n            if (piece.promoted)\n                this.promoted = this.promoted.without(square);\n        }\n        return piece;\n    }\n    set(square, piece) {\n        const old = this.take(square);\n        this.occupied = this.occupied.with(square);\n        this[piece.color] = this[piece.color].with(square);\n        this[piece.role] = this[piece.role].with(square);\n        if (piece.promoted)\n            this.promoted = this.promoted.with(square);\n        return old;\n    }\n    has(square) {\n        return this.occupied.has(square);\n    }\n    *[Symbol.iterator]() {\n        for (const square of this.occupied) {\n            yield [square, this.get(square)];\n        }\n    }\n    pieces(color, role) {\n        return this[color].intersect(this[role]);\n    }\n    rooksAndQueens() {\n        return this.rook.union(this.queen);\n    }\n    bishopsAndQueens() {\n        return this.bishop.union(this.queen);\n    }\n    kingOf(color) {\n        return this.king.intersect(this[color]).diff(this.promoted).singleSquare();\n    }\n}\nexports.Board = Board;\n//# sourceMappingURL=board.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeFen = exports.makeRemainingChecks = exports.makeCastlingFen = exports.makePockets = exports.makePocket = exports.makeBoardFen = exports.makePiece = exports.parsePiece = exports.parseFen = exports.parseRemainingChecks = exports.parseCastlingFen = exports.parsePockets = exports.parseBoardFen = exports.FenError = exports.InvalidFen = exports.EMPTY_FEN = exports.EMPTY_EPD = exports.EMPTY_BOARD_FEN = exports.INITIAL_FEN = exports.INITIAL_EPD = exports.INITIAL_BOARD_FEN = void 0;\nconst result_1 = require(\"@badrap/result\");\nconst types_1 = require(\"./types\");\nconst squareSet_1 = require(\"./squareSet\");\nconst board_1 = require(\"./board\");\nconst setup_1 = require(\"./setup\");\nconst util_1 = require(\"./util\");\nexports.INITIAL_BOARD_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\nexports.INITIAL_EPD = exports.INITIAL_BOARD_FEN + ' w KQkq -';\nexports.INITIAL_FEN = exports.INITIAL_EPD + ' 0 1';\nexports.EMPTY_BOARD_FEN = '8/8/8/8/8/8/8/8';\nexports.EMPTY_EPD = exports.EMPTY_BOARD_FEN + ' w - -';\nexports.EMPTY_FEN = exports.EMPTY_EPD + ' 0 1';\nvar InvalidFen;\n(function (InvalidFen) {\n    InvalidFen[\"Fen\"] = \"ERR_FEN\";\n    InvalidFen[\"Board\"] = \"ERR_BOARD\";\n    InvalidFen[\"Pockets\"] = \"ERR_POCKETS\";\n    InvalidFen[\"Turn\"] = \"ERR_TURN\";\n    InvalidFen[\"Castling\"] = \"ERR_CASTLING\";\n    InvalidFen[\"EpSquare\"] = \"ERR_EP_SQUARE\";\n    InvalidFen[\"RemainingChecks\"] = \"ERR_REMAINING_CHECKS\";\n    InvalidFen[\"Halfmoves\"] = \"ERR_HALFMOVES\";\n    InvalidFen[\"Fullmoves\"] = \"ERR_FULLMOVES\";\n})(InvalidFen = exports.InvalidFen || (exports.InvalidFen = {}));\nclass FenError extends Error {\n}\nexports.FenError = FenError;\nfunction nthIndexOf(haystack, needle, n) {\n    let index = haystack.indexOf(needle);\n    while (n-- > 0) {\n        if (index === -1)\n            break;\n        index = haystack.indexOf(needle, index + needle.length);\n    }\n    return index;\n}\nfunction parseSmallUint(str) {\n    return /^\\d{1,4}$/.test(str) ? parseInt(str, 10) : undefined;\n}\nfunction charToPiece(ch) {\n    const role = util_1.charToRole(ch);\n    return role && { role, color: ch.toLowerCase() === ch ? 'black' : 'white' };\n}\nfunction parseBoardFen(boardPart) {\n    const board = board_1.Board.empty();\n    let rank = 7;\n    let file = 0;\n    for (let i = 0; i < boardPart.length; i++) {\n        const c = boardPart[i];\n        if (c === '/' && file === 8) {\n            file = 0;\n            rank--;\n        }\n        else {\n            const step = parseInt(c, 10);\n            if (step > 0)\n                file += step;\n            else {\n                if (file >= 8 || rank < 0)\n                    return result_1.Result.err(new FenError(InvalidFen.Board));\n                const square = file + rank * 8;\n                const piece = charToPiece(c);\n                if (!piece)\n                    return result_1.Result.err(new FenError(InvalidFen.Board));\n                if (boardPart[i + 1] === '~') {\n                    piece.promoted = true;\n                    i++;\n                }\n                board.set(square, piece);\n                file++;\n            }\n        }\n    }\n    if (rank !== 0 || file !== 8)\n        return result_1.Result.err(new FenError(InvalidFen.Board));\n    return result_1.Result.ok(board);\n}\nexports.parseBoardFen = parseBoardFen;\nfunction parsePockets(pocketPart) {\n    if (pocketPart.length > 64)\n        return result_1.Result.err(new FenError(InvalidFen.Pockets));\n    const pockets = setup_1.Material.empty();\n    for (const c of pocketPart) {\n        const piece = charToPiece(c);\n        if (!piece)\n            return result_1.Result.err(new FenError(InvalidFen.Pockets));\n        pockets[piece.color][piece.role]++;\n    }\n    return result_1.Result.ok(pockets);\n}\nexports.parsePockets = parsePockets;\nfunction parseCastlingFen(board, castlingPart) {\n    let unmovedRooks = squareSet_1.SquareSet.empty();\n    if (castlingPart === '-')\n        return result_1.Result.ok(unmovedRooks);\n    if (!/^[KQABCDEFGH]{0,2}[kqabcdefgh]{0,2}$/.test(castlingPart)) {\n        return result_1.Result.err(new FenError(InvalidFen.Castling));\n    }\n    for (const c of castlingPart) {\n        const lower = c.toLowerCase();\n        const color = c === lower ? 'black' : 'white';\n        const backrank = squareSet_1.SquareSet.backrank(color).intersect(board[color]);\n        let candidates;\n        if (lower === 'q')\n            candidates = backrank;\n        else if (lower === 'k')\n            candidates = backrank.reversed();\n        else\n            candidates = squareSet_1.SquareSet.fromSquare(lower.charCodeAt(0) - 'a'.charCodeAt(0)).intersect(backrank);\n        for (const square of candidates) {\n            if (board.king.has(square) && !board.promoted.has(square))\n                break;\n            if (board.rook.has(square)) {\n                unmovedRooks = unmovedRooks.with(square);\n                break;\n            }\n        }\n    }\n    return result_1.Result.ok(unmovedRooks);\n}\nexports.parseCastlingFen = parseCastlingFen;\nfunction parseRemainingChecks(part) {\n    const parts = part.split('+');\n    if (parts.length === 3 && parts[0] === '') {\n        const white = parseSmallUint(parts[1]);\n        const black = parseSmallUint(parts[2]);\n        if (!util_1.defined(white) || white > 3 || !util_1.defined(black) || black > 3)\n            return result_1.Result.err(new FenError(InvalidFen.RemainingChecks));\n        return result_1.Result.ok(new setup_1.RemainingChecks(3 - white, 3 - black));\n    }\n    else if (parts.length === 2) {\n        const white = parseSmallUint(parts[0]);\n        const black = parseSmallUint(parts[1]);\n        if (!util_1.defined(white) || white > 3 || !util_1.defined(black) || black > 3)\n            return result_1.Result.err(new FenError(InvalidFen.RemainingChecks));\n        return result_1.Result.ok(new setup_1.RemainingChecks(white, black));\n    }\n    else\n        return result_1.Result.err(new FenError(InvalidFen.RemainingChecks));\n}\nexports.parseRemainingChecks = parseRemainingChecks;\nfunction parseFen(fen) {\n    const parts = fen.split(' ');\n    const boardPart = parts.shift();\n    // Board and pockets\n    let board, pockets = result_1.Result.ok(undefined);\n    if (boardPart.endsWith(']')) {\n        const pocketStart = boardPart.indexOf('[');\n        if (pocketStart === -1)\n            return result_1.Result.err(new FenError(InvalidFen.Fen));\n        board = parseBoardFen(boardPart.substr(0, pocketStart));\n        pockets = parsePockets(boardPart.substr(pocketStart + 1, boardPart.length - 1 - pocketStart - 1));\n    }\n    else {\n        const pocketStart = nthIndexOf(boardPart, '/', 7);\n        if (pocketStart === -1)\n            board = parseBoardFen(boardPart);\n        else {\n            board = parseBoardFen(boardPart.substr(0, pocketStart));\n            pockets = parsePockets(boardPart.substr(pocketStart + 1));\n        }\n    }\n    // Turn\n    let turn;\n    const turnPart = parts.shift();\n    if (!util_1.defined(turnPart) || turnPart === 'w')\n        turn = 'white';\n    else if (turnPart === 'b')\n        turn = 'black';\n    else\n        return result_1.Result.err(new FenError(InvalidFen.Turn));\n    return board.chain(board => {\n        // Castling\n        const castlingPart = parts.shift();\n        const unmovedRooks = util_1.defined(castlingPart) ? parseCastlingFen(board, castlingPart) : result_1.Result.ok(squareSet_1.SquareSet.empty());\n        // En passant square\n        const epPart = parts.shift();\n        let epSquare;\n        if (util_1.defined(epPart) && epPart !== '-') {\n            epSquare = util_1.parseSquare(epPart);\n            if (!util_1.defined(epSquare))\n                return result_1.Result.err(new FenError(InvalidFen.EpSquare));\n        }\n        // Halfmoves or remaining checks\n        let halfmovePart = parts.shift();\n        let earlyRemainingChecks;\n        if (util_1.defined(halfmovePart) && halfmovePart.includes('+')) {\n            earlyRemainingChecks = parseRemainingChecks(halfmovePart);\n            halfmovePart = parts.shift();\n        }\n        const halfmoves = util_1.defined(halfmovePart) ? parseSmallUint(halfmovePart) : 0;\n        if (!util_1.defined(halfmoves))\n            return result_1.Result.err(new FenError(InvalidFen.Halfmoves));\n        const fullmovesPart = parts.shift();\n        const fullmoves = util_1.defined(fullmovesPart) ? parseSmallUint(fullmovesPart) : 1;\n        if (!util_1.defined(fullmoves))\n            return result_1.Result.err(new FenError(InvalidFen.Fullmoves));\n        const remainingChecksPart = parts.shift();\n        let remainingChecks = result_1.Result.ok(undefined);\n        if (util_1.defined(remainingChecksPart)) {\n            if (util_1.defined(earlyRemainingChecks))\n                return result_1.Result.err(new FenError(InvalidFen.RemainingChecks));\n            remainingChecks = parseRemainingChecks(remainingChecksPart);\n        }\n        else if (util_1.defined(earlyRemainingChecks)) {\n            remainingChecks = earlyRemainingChecks;\n        }\n        if (parts.length > 0)\n            return result_1.Result.err(new FenError(InvalidFen.Fen));\n        return pockets.chain(pockets => unmovedRooks.chain(unmovedRooks => remainingChecks.map(remainingChecks => {\n            return {\n                board,\n                pockets,\n                turn,\n                unmovedRooks,\n                remainingChecks,\n                epSquare,\n                halfmoves,\n                fullmoves: Math.max(1, fullmoves)\n            };\n        })));\n    });\n}\nexports.parseFen = parseFen;\nfunction parsePiece(str) {\n    if (!str)\n        return;\n    const piece = charToPiece(str[0]);\n    if (!piece)\n        return;\n    if (str.length === 2 && str[1] === '~')\n        piece.promoted = true;\n    else if (str.length > 1)\n        return;\n    return piece;\n}\nexports.parsePiece = parsePiece;\nfunction makePiece(piece, opts) {\n    let r = util_1.roleToChar(piece.role);\n    if (piece.color === 'white')\n        r = r.toUpperCase();\n    if ((opts === null || opts === void 0 ? void 0 : opts.promoted) && piece.promoted)\n        r += '~';\n    return r;\n}\nexports.makePiece = makePiece;\nfunction makeBoardFen(board, opts) {\n    let fen = '';\n    let empty = 0;\n    for (let rank = 7; rank >= 0; rank--) {\n        for (let file = 0; file < 8; file++) {\n            const square = file + rank * 8;\n            const piece = board.get(square);\n            if (!piece)\n                empty++;\n            else {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                fen += makePiece(piece, opts);\n            }\n            if (file === 7) {\n                if (empty > 0) {\n                    fen += empty;\n                    empty = 0;\n                }\n                if (rank !== 0)\n                    fen += '/';\n            }\n        }\n    }\n    return fen;\n}\nexports.makeBoardFen = makeBoardFen;\nfunction makePocket(material) {\n    return types_1.ROLES.map(role => util_1.roleToChar(role).repeat(material[role])).join('');\n}\nexports.makePocket = makePocket;\nfunction makePockets(pocket) {\n    return makePocket(pocket.white).toUpperCase() + makePocket(pocket.black);\n}\nexports.makePockets = makePockets;\nfunction makeCastlingFen(board, unmovedRooks, opts) {\n    const shredder = opts === null || opts === void 0 ? void 0 : opts.shredder;\n    let fen = '';\n    for (const color of types_1.COLORS) {\n        const backrank = squareSet_1.SquareSet.backrank(color);\n        const king = board.kingOf(color);\n        if (!util_1.defined(king) || !backrank.has(king))\n            continue;\n        const candidates = board.pieces(color, 'rook').intersect(backrank);\n        for (const rook of unmovedRooks.intersect(candidates).reversed()) {\n            if (!shredder && rook === candidates.first() && rook < king) {\n                fen += color === 'white' ? 'Q' : 'q';\n            }\n            else if (!shredder && rook === candidates.last() && king < rook) {\n                fen += color === 'white' ? 'K' : 'k';\n            }\n            else {\n                const file = types_1.FILE_NAMES[util_1.squareFile(rook)];\n                fen += color === 'white' ? file.toUpperCase() : file;\n            }\n        }\n    }\n    return fen || '-';\n}\nexports.makeCastlingFen = makeCastlingFen;\nfunction makeRemainingChecks(checks) {\n    return `${checks.white}+${checks.black}`;\n}\nexports.makeRemainingChecks = makeRemainingChecks;\nfunction makeFen(setup, opts) {\n    return [\n        makeBoardFen(setup.board, opts) + (setup.pockets ? `[${makePockets(setup.pockets)}]` : ''),\n        setup.turn[0],\n        makeCastlingFen(setup.board, setup.unmovedRooks, opts),\n        util_1.defined(setup.epSquare) ? util_1.makeSquare(setup.epSquare) : '-',\n        ...(setup.remainingChecks ? [makeRemainingChecks(setup.remainingChecks)] : []),\n        ...((opts === null || opts === void 0 ? void 0 : opts.epd) ? [] : [\n            Math.max(0, Math.min(setup.halfmoves, 9999)),\n            Math.max(1, Math.min(setup.fullmoves, 9999)),\n        ])\n    ].join(' ');\n}\nexports.makeFen = makeFen;\n//# sourceMappingURL=fen.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RULES = exports.isNormal = exports.isDrop = exports.CASTLING_SIDES = exports.ROLES = exports.COLORS = exports.RANK_NAMES = exports.FILE_NAMES = void 0;\nexports.FILE_NAMES = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexports.RANK_NAMES = ['1', '2', '3', '4', '5', '6', '7', '8'];\nexports.COLORS = ['white', 'black'];\nexports.ROLES = ['pawn', 'knight', 'bishop', 'rook', 'queen', 'king'];\nexports.CASTLING_SIDES = ['a', 'h'];\nfunction isDrop(v) {\n    return 'role' in v;\n}\nexports.isDrop = isDrop;\nfunction isNormal(v) {\n    return 'from' in v;\n}\nexports.isNormal = isNormal;\nexports.RULES = ['chess', 'antichess', 'kingofthehill', '3check', 'atomic', 'horde', 'racingkings', 'crazyhouse'];\n//# sourceMappingURL=types.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"score\",attrs:{\"id\":\"score\"}}),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"text\",\"id\":\"fen\"}}),_c('button',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"clickbutton\"},on:{\"click\":function($event){return _vm.setFen()}}}),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"text\",\"id\":\"showmove\"}}),_c('chessboard',{staticClass:\"board\",attrs:{\"fen\":_vm.currentFen},on:{\"onMove\":_vm.showMove}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">    \n    <div id=\"score\" class=\"score\"></div>\n    <input style=\"display:none;\" type=\"text\" id=\"fen\"/>\n    <button id=\"clickbutton\" style=\"display:none;\" @click=\"setFen()\"/>\n    <input style=\"display:none;\" type=\"text\" id=\"showmove\"/>\n    <chessboard class=\"board\" :fen=\"currentFen\" @onMove=\"showMove\"/>        \n  </div>\n</template>\n\n<script>\nimport {chessboard} from 'vue-chessboard'\nimport 'vue-chessboard/dist/vue-chessboard.css'\n\nexport default {\n  name: 'app',  \n  components: {\n      chessboard,\n  },\n  data () {\n    return {        \n        currentFen: '',\n        positionInfo: null,      \n    }\n  },\n  methods: {\n    showMove(data) {\n      const blob = JSON.stringify(data)\n      document.getElementById(\"showmove\").value = blob\n    },    \n    setFen(fen){\n        const inp = document.getElementById(\"fen\")        \n        if(fen) inp.value = fen\n        this.currentFen = inp.value\n    },\n    promote() {\n      if (confirm(\"Want to promote to rook? Queen by default\") ) {\n        return 'r'\n      } else {\n        return 'q'\n      }\n    }\n  },\n  created() {\n    this.fens = ['5rr1/3nqpk1/p3p2p/Pp1pP1pP/2pP1PN1/2P1Q3/2P3P1/R4RK1 b - f3 0 28',\n                'r4rk1/pp1b3p/6p1/8/3NpP2/1P4P1/P2K3P/R6R w - - 0 22'\n                ]\n  },\n}\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6c5db600&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport '../public/app.css'\n\nimport { parseFen } from './chessops/fen'\nimport { Chess } from './chessops/chess'\nimport { parseUci } from './chessops/util'\nimport { makeFen } from './chessops/fen'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n\nconst startFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\nfunction posFromFen(fen){\n    const setup = parseFen(fen).unwrap()\n    const pos = Chess.fromSetup(setup).unwrap()\n\n    return pos\n}\n\nfunction posToFen(pos){\n    const fen = makeFen(pos.toSetup(), null)\n\n    return fen\n}\n\nfunction makeUciMove(pos, uci){\n    const m = parseUci(uci)    \n    pos.play(m)\n}\n\nlet pos = null\n\nfunction setFen(fen){\n    document.getElementById('fen').value = fen\n    document.getElementById(\"clickbutton\").click()\n\n    pos = posFromFen(fen)\n}\n\nsetFen(startFen)\n\nlet showmove = document.getElementById(\"showmove\")\n\nfunction waitShowMove(){\n    return new Promise(resolve => {\n        const current = showmove.value\n\n        setInterval(function(){\n            if(showmove.value != current){                \n                resolve(JSON.parse(showmove.value))\n            }\n        }, 200)\n    })\n}\n\nfunction fetchBook(fen){\n    return new Promise(resolve => {\n        fetch(`https://explorer.lichess.ovh/lichess?fen=${fen}&play=&variant=standard&speeds%5B%5D=blitz&speeds%5B%5D=rapid&ratings%5B%5D=2000&ratings%5B%5D=2200&ratings%5B%5D=2500`).then(response => response.json().then(json => {\n            resolve(json)\n        }))\n    })\n}\n\nlet depth = 0\n\nlet score = 0\n\nfunction showScore(text){\n    document.getElementById(\"score\").innerHTML = text\n}\n\nasync function play(){\n    const currFen = posToFen(pos)\n\n    let data = await waitShowMove()\n\n    let san = data.history[0]\n\n    pos = posFromFen(data.fen)\n\n    setFen(data.fen)\n\n    fetchBook(currFen).then(json => {\n        let index = json.moves.findIndex(item => item.san == san)\n\n        if(index < 0){\n            window.alert(\"This move is not among top 12 choices. You lose. Lets start again ...\")\n            setFen(startFen)\n            depth = 0\n            showScore(\"Make your opening move!\")\n            score = 0\n\n            setTimeout(function(){play()}, 0)\n\n            return\n        }else{            \n            setFen(data.fen)\n            depth++\n\n            let bonus = 12 - index\n\n            score = score + bonus\n\n            showScore(`You made the move ranked <span class=\"rank\">${index + 1}</span> . You receive <span class=\"bonus\">${bonus}</span> points. Your score is <span class=\"standing\">${score}</span> .`)\n        }\n\n        if(depth >= 12){\n            window.alert(`Well done! Your final score is ${score} .`)\n            showScore(`Your final score is <span class=\"standing\">${score}</span> . Make your first move!`)\n            setFen(startFen)\n            depth = 0\n            showScore(`Your final score is <span class=\"standing\">${score}</span> . Make your first move!`)\n            score = 0\n\n            setTimeout(function(){play()}, 0)\n        }else{\n            fetchBook(posToFen(pos)).then(json => {\n                let total = 0\n\n                for(let item of json.moves){                    \n                    total += item.white + item.draws + item.black\n                }\n\n                let rand = Math.floor(Math.random() * total)\n\n                total = 0\n\n                let selected = null\n\n                for(let item of json.moves){                    \n                    total += item.white + item.draws + item.black\n                    if(total >= rand){\n                        selected = item\n\n                        break\n                    }\n                }\n\n                makeUciMove(pos, selected.uci)\n\n                setFen(posToFen(pos))\n\n                setTimeout(function(){play()}, 0)\n            })\n        }\n    })\n}\n\nshowScore(\"Welcome to Opening Trainer! Make your first move!\")\n\nsetTimeout(function(){play()}, 0)\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SquareSet = void 0;\nfunction popcnt32(n) {\n    n = n - ((n >>> 1) & 1431655765);\n    n = (n & 858993459) + ((n >>> 2) & 858993459);\n    return Math.imul(n + (n >>> 4) & 252645135, 16843009) >> 24;\n}\nfunction bswap32(n) {\n    n = (n >>> 8) & 16711935 | ((n & 16711935) << 8);\n    return (n >>> 16) & 0xffff | ((n & 0xffff) << 16);\n}\nfunction rbit32(n) {\n    n = ((n >>> 1) & 1431655765) | ((n & 1431655765) << 1);\n    n = ((n >>> 2) & 858993459) | ((n & 858993459) << 2);\n    n = ((n >>> 4) & 252645135) | ((n & 252645135) << 4);\n    return bswap32(n);\n}\nclass SquareSet {\n    constructor(lo, hi) {\n        this.lo = lo;\n        this.hi = hi;\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    static fromSquare(square) {\n        return square >= 32 ?\n            new SquareSet(0, 1 << (square - 32)) :\n            new SquareSet(1 << square, 0);\n    }\n    static fromRank(rank) {\n        return new SquareSet(0xff, 0).shl64(8 * rank);\n    }\n    static fromFile(file) {\n        return new SquareSet(16843009 << file, 16843009 << file);\n    }\n    static empty() {\n        return new SquareSet(0, 0);\n    }\n    static full() {\n        return new SquareSet(4294967295, 4294967295);\n    }\n    static corners() {\n        return new SquareSet(0x81, 2164260864);\n    }\n    static center() {\n        return new SquareSet(402653184, 0x18);\n    }\n    static backranks() {\n        return new SquareSet(0xff, 4278190080);\n    }\n    static backrank(color) {\n        return color === 'white' ? new SquareSet(0xff, 0) : new SquareSet(0, 4278190080);\n    }\n    static lightSquares() {\n        return new SquareSet(1437226410, 1437226410);\n    }\n    static darkSquares() {\n        return new SquareSet(2857740885, 2857740885);\n    }\n    complement() {\n        return new SquareSet(~this.lo, ~this.hi);\n    }\n    xor(other) {\n        return new SquareSet(this.lo ^ other.lo, this.hi ^ other.hi);\n    }\n    union(other) {\n        return new SquareSet(this.lo | other.lo, this.hi | other.hi);\n    }\n    intersect(other) {\n        return new SquareSet(this.lo & other.lo, this.hi & other.hi);\n    }\n    diff(other) {\n        return new SquareSet(this.lo & ~other.lo, this.hi & ~other.hi);\n    }\n    intersects(other) {\n        return this.intersect(other).nonEmpty();\n    }\n    isDisjoint(other) {\n        return this.intersect(other).isEmpty();\n    }\n    supersetOf(other) {\n        return other.diff(this).isEmpty();\n    }\n    subsetOf(other) {\n        return this.diff(other).isEmpty();\n    }\n    shr64(shift) {\n        if (shift >= 64)\n            return SquareSet.empty();\n        if (shift >= 32)\n            return new SquareSet(this.hi >>> (shift - 32), 0);\n        if (shift > 0)\n            return new SquareSet((this.lo >>> shift) ^ (this.hi << (32 - shift)), this.hi >>> shift);\n        return this;\n    }\n    shl64(shift) {\n        if (shift >= 64)\n            return SquareSet.empty();\n        if (shift >= 32)\n            return new SquareSet(0, this.lo << (shift - 32));\n        if (shift > 0)\n            return new SquareSet(this.lo << shift, (this.hi << shift) ^ (this.lo >>> (32 - shift)));\n        return this;\n    }\n    bswap64() {\n        return new SquareSet(bswap32(this.hi), bswap32(this.lo));\n    }\n    rbit64() {\n        return new SquareSet(rbit32(this.hi), rbit32(this.lo));\n    }\n    minus64(other) {\n        const lo = this.lo - other.lo;\n        const c = ((lo & other.lo & 1) + (other.lo >>> 1) + (lo >>> 1)) >>> 31;\n        return new SquareSet(lo, this.hi - (other.hi + c));\n    }\n    equals(other) {\n        return this.lo === other.lo && this.hi === other.hi;\n    }\n    size() {\n        return popcnt32(this.lo) + popcnt32(this.hi);\n    }\n    isEmpty() {\n        return this.lo === 0 && this.hi === 0;\n    }\n    nonEmpty() {\n        return this.lo !== 0 || this.hi !== 0;\n    }\n    has(square) {\n        return (square >= 32 ? this.hi & (1 << (square - 32)) : this.lo & (1 << square)) !== 0;\n    }\n    set(square, on) {\n        return on ? this.with(square) : this.without(square);\n    }\n    with(square) {\n        return square >= 32 ?\n            new SquareSet(this.lo, this.hi | (1 << (square - 32))) :\n            new SquareSet(this.lo | (1 << square), this.hi);\n    }\n    without(square) {\n        return square >= 32 ?\n            new SquareSet(this.lo, this.hi & ~(1 << (square - 32))) :\n            new SquareSet(this.lo & ~(1 << square), this.hi);\n    }\n    toggle(square) {\n        return square >= 32 ?\n            new SquareSet(this.lo, this.hi ^ (1 << (square - 32))) :\n            new SquareSet(this.lo ^ (1 << square), this.hi);\n    }\n    last() {\n        if (this.hi !== 0)\n            return 63 - Math.clz32(this.hi);\n        if (this.lo !== 0)\n            return 31 - Math.clz32(this.lo);\n        return;\n    }\n    first() {\n        if (this.lo !== 0)\n            return 31 - Math.clz32(this.lo & -this.lo);\n        if (this.hi !== 0)\n            return 63 - Math.clz32(this.hi & -this.hi);\n        return;\n    }\n    withoutFirst() {\n        if (this.lo !== 0)\n            return new SquareSet(this.lo & (this.lo - 1), this.hi);\n        return new SquareSet(0, this.hi & (this.hi - 1));\n    }\n    moreThanOne() {\n        return (this.hi !== 0 && this.lo !== 0) || (this.lo & (this.lo - 1)) !== 0 || (this.hi & (this.hi - 1)) !== 0;\n    }\n    singleSquare() {\n        return this.moreThanOne() ? undefined : this.last();\n    }\n    isSingleSquare() {\n        return this.nonEmpty() && !this.moreThanOne();\n    }\n    *[Symbol.iterator]() {\n        let lo = this.lo;\n        let hi = this.hi;\n        while (lo !== 0) {\n            const idx = 31 - Math.clz32(lo & -lo);\n            lo ^= 1 << idx;\n            yield idx;\n        }\n        while (hi !== 0) {\n            const idx = 31 - Math.clz32(hi & -hi);\n            hi ^= 1 << idx;\n            yield 32 + idx;\n        }\n    }\n    *reversed() {\n        let lo = this.lo;\n        let hi = this.hi;\n        while (hi !== 0) {\n            const idx = 31 - Math.clz32(hi);\n            hi ^= 1 << idx;\n            yield 32 + idx;\n        }\n        while (lo !== 0) {\n            const idx = 31 - Math.clz32(lo);\n            lo ^= 1 << idx;\n            yield idx;\n        }\n    }\n}\nexports.SquareSet = SquareSet;\n//# sourceMappingURL=squareSet.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeUci = exports.parseUci = exports.makeSquare = exports.parseSquare = exports.charToRole = exports.roleToChar = exports.squareFile = exports.squareRank = exports.opposite = exports.defined = void 0;\nconst types_1 = require(\"./types\");\nfunction defined(v) {\n    return v !== undefined;\n}\nexports.defined = defined;\nfunction opposite(color) {\n    return color === 'white' ? 'black' : 'white';\n}\nexports.opposite = opposite;\nfunction squareRank(square) {\n    return square >> 3;\n}\nexports.squareRank = squareRank;\nfunction squareFile(square) {\n    return square & 0x7;\n}\nexports.squareFile = squareFile;\nfunction roleToChar(role) {\n    switch (role) {\n        case 'pawn': return 'p';\n        case 'knight': return 'n';\n        case 'bishop': return 'b';\n        case 'rook': return 'r';\n        case 'queen': return 'q';\n        case 'king': return 'k';\n    }\n}\nexports.roleToChar = roleToChar;\nfunction charToRole(ch) {\n    switch (ch) {\n        case 'P':\n        case 'p': return 'pawn';\n        case 'N':\n        case 'n': return 'knight';\n        case 'B':\n        case 'b': return 'bishop';\n        case 'R':\n        case 'r': return 'rook';\n        case 'Q':\n        case 'q': return 'queen';\n        case 'K':\n        case 'k': return 'king';\n        default: return;\n    }\n}\nexports.charToRole = charToRole;\nfunction parseSquare(str) {\n    if (str.length !== 2)\n        return;\n    const file = str.charCodeAt(0) - 'a'.charCodeAt(0);\n    const rank = str.charCodeAt(1) - '1'.charCodeAt(0);\n    if (file < 0 || file >= 8 || rank < 0 || rank >= 8)\n        return;\n    return file + 8 * rank;\n}\nexports.parseSquare = parseSquare;\nfunction makeSquare(square) {\n    return types_1.FILE_NAMES[squareFile(square)] + types_1.RANK_NAMES[squareRank(square)];\n}\nexports.makeSquare = makeSquare;\nfunction parseUci(str) {\n    if (str[1] === '@' && str.length === 4) {\n        const role = charToRole(str[0]);\n        const to = parseSquare(str.slice(2));\n        if (role && defined(to))\n            return { role, to };\n    }\n    else if (str.length === 4 || str.length === 5) {\n        const from = parseSquare(str.slice(0, 2));\n        const to = parseSquare(str.slice(2, 4));\n        let promotion;\n        if (str.length === 5) {\n            promotion = charToRole(str[4]);\n            if (!promotion)\n                return;\n        }\n        if (defined(from) && defined(to))\n            return { from, to, promotion };\n    }\n    return;\n}\nexports.parseUci = parseUci;\nfunction makeUci(move) {\n    if (types_1.isDrop(move))\n        return `${roleToChar(move.role).toUpperCase()}@${makeSquare(move.to)}`;\n    return makeSquare(move.from) + makeSquare(move.to) + (move.promotion ? roleToChar(move.promotion) : '');\n}\nexports.makeUci = makeUci;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.between = exports.ray = exports.attacks = exports.queenAttacks = exports.rookAttacks = exports.bishopAttacks = exports.pawnAttacks = exports.knightAttacks = exports.kingAttacks = void 0;\nconst util_1 = require(\"./util\");\nconst squareSet_1 = require(\"./squareSet\");\nfunction computeRange(square, deltas) {\n    let range = squareSet_1.SquareSet.empty();\n    for (const delta of deltas) {\n        const sq = square + delta;\n        if (0 <= sq && sq < 64 && Math.abs(util_1.squareFile(square) - util_1.squareFile(sq)) <= 2) {\n            range = range.with(sq);\n        }\n    }\n    return range;\n}\nfunction tabulate(f) {\n    const table = [];\n    for (let square = 0; square < 64; square++)\n        table[square] = f(square);\n    return table;\n}\nconst KING_ATTACKS = tabulate(sq => computeRange(sq, [-9, -8, -7, -1, 1, 7, 8, 9]));\nconst KNIGHT_ATTACKS = tabulate(sq => computeRange(sq, [-17, -15, -10, -6, 6, 10, 15, 17]));\nconst PAWN_ATTACKS = {\n    white: tabulate(sq => computeRange(sq, [7, 9])),\n    black: tabulate(sq => computeRange(sq, [-7, -9])),\n};\nfunction kingAttacks(square) {\n    return KING_ATTACKS[square];\n}\nexports.kingAttacks = kingAttacks;\nfunction knightAttacks(square) {\n    return KNIGHT_ATTACKS[square];\n}\nexports.knightAttacks = knightAttacks;\nfunction pawnAttacks(color, square) {\n    return PAWN_ATTACKS[color][square];\n}\nexports.pawnAttacks = pawnAttacks;\nconst FILE_RANGE = tabulate(sq => squareSet_1.SquareSet.fromFile(util_1.squareFile(sq)).without(sq));\nconst RANK_RANGE = tabulate(sq => squareSet_1.SquareSet.fromRank(util_1.squareRank(sq)).without(sq));\nconst DIAG_RANGE = tabulate(sq => {\n    const diag = new squareSet_1.SquareSet(134480385, 2151686160);\n    const shift = 8 * (util_1.squareRank(sq) - util_1.squareFile(sq));\n    return (shift >= 0 ? diag.shl64(shift) : diag.shr64(-shift)).without(sq);\n});\nconst ANTI_DIAG_RANGE = tabulate(sq => {\n    const diag = new squareSet_1.SquareSet(270549120, 16909320);\n    const shift = 8 * (util_1.squareRank(sq) + util_1.squareFile(sq) - 7);\n    return (shift >= 0 ? diag.shl64(shift) : diag.shr64(-shift)).without(sq);\n});\nfunction hyperbola(bit, range, occupied) {\n    let forward = occupied.intersect(range);\n    let reverse = forward.bswap64(); // Assumes no more than 1 bit per rank\n    forward = forward.minus64(bit);\n    reverse = reverse.minus64(bit.bswap64());\n    return forward.xor(reverse.bswap64()).intersect(range);\n}\nfunction fileAttacks(square, occupied) {\n    return hyperbola(squareSet_1.SquareSet.fromSquare(square), FILE_RANGE[square], occupied);\n}\nfunction rankAttacks(square, occupied) {\n    const range = RANK_RANGE[square];\n    let forward = occupied.intersect(range);\n    let reverse = forward.rbit64();\n    forward = forward.minus64(squareSet_1.SquareSet.fromSquare(square));\n    reverse = reverse.minus64(squareSet_1.SquareSet.fromSquare(63 - square));\n    return forward.xor(reverse.rbit64()).intersect(range);\n}\nfunction bishopAttacks(square, occupied) {\n    const bit = squareSet_1.SquareSet.fromSquare(square);\n    return hyperbola(bit, DIAG_RANGE[square], occupied).xor(hyperbola(bit, ANTI_DIAG_RANGE[square], occupied));\n}\nexports.bishopAttacks = bishopAttacks;\nfunction rookAttacks(square, occupied) {\n    return fileAttacks(square, occupied).xor(rankAttacks(square, occupied));\n}\nexports.rookAttacks = rookAttacks;\nfunction queenAttacks(square, occupied) {\n    return bishopAttacks(square, occupied).xor(rookAttacks(square, occupied));\n}\nexports.queenAttacks = queenAttacks;\nfunction attacks(piece, square, occupied) {\n    switch (piece.role) {\n        case 'pawn': return pawnAttacks(piece.color, square);\n        case 'knight': return knightAttacks(square);\n        case 'bishop': return bishopAttacks(square, occupied);\n        case 'rook': return rookAttacks(square, occupied);\n        case 'queen': return queenAttacks(square, occupied);\n        case 'king': return kingAttacks(square);\n    }\n}\nexports.attacks = attacks;\nfunction ray(a, b) {\n    const other = squareSet_1.SquareSet.fromSquare(b);\n    if (RANK_RANGE[a].intersects(other))\n        return RANK_RANGE[a].with(a);\n    if (ANTI_DIAG_RANGE[a].intersects(other))\n        return ANTI_DIAG_RANGE[a].with(a);\n    if (DIAG_RANGE[a].intersects(other))\n        return DIAG_RANGE[a].with(a);\n    if (FILE_RANGE[a].intersects(other))\n        return FILE_RANGE[a].with(a);\n    return squareSet_1.SquareSet.empty();\n}\nexports.ray = ray;\nfunction between(a, b) {\n    return ray(a, b).intersect(squareSet_1.SquareSet.full().shl64(a).xor(squareSet_1.SquareSet.full().shl64(b))).withoutFirst();\n}\nexports.between = between;\n//# sourceMappingURL=attacks.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultSetup = exports.RemainingChecks = exports.Material = exports.MaterialSide = void 0;\nconst types_1 = require(\"./types\");\nconst squareSet_1 = require(\"./squareSet\");\nconst board_1 = require(\"./board\");\nclass MaterialSide {\n    constructor() { }\n    static empty() {\n        const m = new MaterialSide();\n        for (const role of types_1.ROLES)\n            m[role] = 0;\n        return m;\n    }\n    static fromBoard(board, color) {\n        const m = new MaterialSide();\n        for (const role of types_1.ROLES)\n            m[role] = board.pieces(color, role).size();\n        return m;\n    }\n    clone() {\n        const m = new MaterialSide();\n        for (const role of types_1.ROLES)\n            m[role] = this[role];\n        return m;\n    }\n    equals(other) {\n        return types_1.ROLES.every(role => this[role] === other[role]);\n    }\n    add(other) {\n        const m = new MaterialSide();\n        for (const role of types_1.ROLES)\n            m[role] = this[role] + other[role];\n        return m;\n    }\n    nonEmpty() {\n        return types_1.ROLES.some(role => this[role] > 0);\n    }\n    isEmpty() {\n        return !this.nonEmpty();\n    }\n    hasPawns() {\n        return this.pawn > 0;\n    }\n    hasNonPawns() {\n        return this.knight > 0 || this.bishop > 0 || this.rook > 0 || this.queen > 0 || this.king > 0;\n    }\n    count() {\n        return this.pawn + this.knight + this.bishop + this.rook + this.queen + this.king;\n    }\n}\nexports.MaterialSide = MaterialSide;\nclass Material {\n    constructor(white, black) {\n        this.white = white;\n        this.black = black;\n    }\n    static empty() {\n        return new Material(MaterialSide.empty(), MaterialSide.empty());\n    }\n    static fromBoard(board) {\n        return new Material(MaterialSide.fromBoard(board, 'white'), MaterialSide.fromBoard(board, 'black'));\n    }\n    clone() {\n        return new Material(this.white.clone(), this.black.clone());\n    }\n    equals(other) {\n        return this.white.equals(other.white) && this.black.equals(other.black);\n    }\n    add(other) {\n        return new Material(this.white.add(other.white), this.black.add(other.black));\n    }\n    count() {\n        return this.white.count() + this.black.count();\n    }\n    isEmpty() {\n        return this.white.isEmpty() && this.black.isEmpty();\n    }\n    nonEmpty() {\n        return !this.isEmpty();\n    }\n    hasPawns() {\n        return this.white.hasPawns() || this.black.hasPawns();\n    }\n    hasNonPawns() {\n        return this.white.hasNonPawns() || this.black.hasNonPawns();\n    }\n}\nexports.Material = Material;\nclass RemainingChecks {\n    constructor(white, black) {\n        this.white = white;\n        this.black = black;\n    }\n    static default() {\n        return new RemainingChecks(3, 3);\n    }\n    clone() {\n        return new RemainingChecks(this.white, this.black);\n    }\n    equals(other) {\n        return this.white === other.white && this.black === other.black;\n    }\n}\nexports.RemainingChecks = RemainingChecks;\nfunction defaultSetup() {\n    return {\n        board: board_1.Board.default(),\n        pockets: undefined,\n        turn: 'white',\n        unmovedRooks: squareSet_1.SquareSet.corners(),\n        epSquare: undefined,\n        remainingChecks: undefined,\n        halfmoves: 0,\n        fullmoves: 1,\n    };\n}\nexports.defaultSetup = defaultSetup;\n//# sourceMappingURL=setup.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Chess = exports.Position = exports.Castles = exports.PositionError = exports.IllegalSetup = void 0;\nconst result_1 = require(\"@badrap/result\");\nconst types_1 = require(\"./types\");\nconst squareSet_1 = require(\"./squareSet\");\nconst board_1 = require(\"./board\");\nconst attacks_1 = require(\"./attacks\");\nconst util_1 = require(\"./util\");\nvar IllegalSetup;\n(function (IllegalSetup) {\n    IllegalSetup[\"Empty\"] = \"ERR_EMPTY\";\n    IllegalSetup[\"OppositeCheck\"] = \"ERR_OPPOSITE_CHECK\";\n    IllegalSetup[\"ImpossibleCheck\"] = \"ERR_IMPOSSIBLE_CHECK\";\n    IllegalSetup[\"PawnsOnBackrank\"] = \"ERR_PAWNS_ON_BACKRANK\";\n    IllegalSetup[\"Kings\"] = \"ERR_KINGS\";\n    IllegalSetup[\"Variant\"] = \"ERR_VARIANT\";\n})(IllegalSetup = exports.IllegalSetup || (exports.IllegalSetup = {}));\nclass PositionError extends Error {\n}\nexports.PositionError = PositionError;\nfunction attacksTo(square, attacker, board, occupied) {\n    return board[attacker].intersect(attacks_1.rookAttacks(square, occupied).intersect(board.rooksAndQueens())\n        .union(attacks_1.bishopAttacks(square, occupied).intersect(board.bishopsAndQueens()))\n        .union(attacks_1.knightAttacks(square).intersect(board.knight))\n        .union(attacks_1.kingAttacks(square).intersect(board.king))\n        .union(attacks_1.pawnAttacks(util_1.opposite(attacker), square).intersect(board.pawn)));\n}\nfunction kingCastlesTo(color, side) {\n    return color === 'white' ? (side === 'a' ? 2 : 6) : (side === 'a' ? 58 : 62);\n}\nfunction rookCastlesTo(color, side) {\n    return color === 'white' ? (side === 'a' ? 3 : 5) : (side === 'a' ? 59 : 61);\n}\nclass Castles {\n    constructor() { }\n    static default() {\n        const castles = new Castles();\n        castles.unmovedRooks = squareSet_1.SquareSet.corners();\n        castles.rook = {\n            white: { a: 0, h: 7 },\n            black: { a: 56, h: 63 },\n        };\n        castles.path = {\n            white: { a: new squareSet_1.SquareSet(0xe, 0), h: new squareSet_1.SquareSet(0x60, 0) },\n            black: { a: new squareSet_1.SquareSet(0, 0x0e000000), h: new squareSet_1.SquareSet(0, 0x60000000) },\n        };\n        return castles;\n    }\n    static empty() {\n        const castles = new Castles();\n        castles.unmovedRooks = squareSet_1.SquareSet.empty();\n        castles.rook = {\n            white: { a: undefined, h: undefined },\n            black: { a: undefined, h: undefined },\n        };\n        castles.path = {\n            white: { a: squareSet_1.SquareSet.empty(), h: squareSet_1.SquareSet.empty() },\n            black: { a: squareSet_1.SquareSet.empty(), h: squareSet_1.SquareSet.empty() },\n        };\n        return castles;\n    }\n    clone() {\n        const castles = new Castles();\n        castles.unmovedRooks = this.unmovedRooks;\n        castles.rook = {\n            white: { a: this.rook.white.a, h: this.rook.white.h },\n            black: { a: this.rook.black.a, h: this.rook.black.h },\n        };\n        castles.path = {\n            white: { a: this.path.white.a, h: this.path.white.h },\n            black: { a: this.path.black.a, h: this.path.black.h },\n        };\n        return castles;\n    }\n    add(color, side, king, rook) {\n        const kingTo = kingCastlesTo(color, side);\n        const rookTo = rookCastlesTo(color, side);\n        this.unmovedRooks = this.unmovedRooks.with(rook);\n        this.rook[color][side] = rook;\n        this.path[color][side] = attacks_1.between(rook, rookTo).with(rookTo)\n            .union(attacks_1.between(king, kingTo).with(kingTo))\n            .without(king).without(rook);\n    }\n    static fromSetup(setup) {\n        const castles = Castles.empty();\n        const rooks = setup.unmovedRooks.intersect(setup.board.rook);\n        for (const color of types_1.COLORS) {\n            const backrank = squareSet_1.SquareSet.backrank(color);\n            const king = setup.board.kingOf(color);\n            if (!util_1.defined(king) || !backrank.has(king))\n                continue;\n            const side = rooks.intersect(setup.board[color]).intersect(backrank);\n            const aSide = side.first();\n            if (util_1.defined(aSide) && aSide < king)\n                castles.add(color, 'a', king, aSide);\n            const hSide = side.last();\n            if (util_1.defined(hSide) && king < hSide)\n                castles.add(color, 'h', king, hSide);\n        }\n        return castles;\n    }\n    discardRook(square) {\n        if (this.unmovedRooks.has(square)) {\n            this.unmovedRooks = this.unmovedRooks.without(square);\n            for (const color of types_1.COLORS) {\n                for (const side of types_1.CASTLING_SIDES) {\n                    if (this.rook[color][side] === square)\n                        this.rook[color][side] = undefined;\n                }\n            }\n        }\n    }\n    discardSide(color) {\n        this.unmovedRooks = this.unmovedRooks.diff(squareSet_1.SquareSet.backrank(color));\n        this.rook[color].a = undefined;\n        this.rook[color].h = undefined;\n    }\n}\nexports.Castles = Castles;\nclass Position {\n    constructor(rules) {\n        this.rules = rules;\n    }\n    kingAttackers(square, attacker, occupied) {\n        return attacksTo(square, attacker, this.board, occupied);\n    }\n    dropDests(_ctx) {\n        return squareSet_1.SquareSet.empty();\n    }\n    playCaptureAt(square, captured) {\n        this.halfmoves = 0;\n        if (captured.role === 'rook')\n            this.castles.discardRook(square);\n        if (this.pockets)\n            this.pockets[util_1.opposite(captured.color)][captured.role]++;\n    }\n    ctx() {\n        const variantEnd = this.isVariantEnd();\n        const king = this.board.kingOf(this.turn);\n        if (!util_1.defined(king))\n            return { king, blockers: squareSet_1.SquareSet.empty(), checkers: squareSet_1.SquareSet.empty(), variantEnd, mustCapture: false };\n        const snipers = attacks_1.rookAttacks(king, squareSet_1.SquareSet.empty()).intersect(this.board.rooksAndQueens())\n            .union(attacks_1.bishopAttacks(king, squareSet_1.SquareSet.empty()).intersect(this.board.bishopsAndQueens()))\n            .intersect(this.board[util_1.opposite(this.turn)]);\n        let blockers = squareSet_1.SquareSet.empty();\n        for (const sniper of snipers) {\n            const b = attacks_1.between(king, sniper).intersect(this.board.occupied);\n            if (!b.moreThanOne())\n                blockers = blockers.union(b);\n        }\n        const checkers = this.kingAttackers(king, util_1.opposite(this.turn), this.board.occupied);\n        return {\n            king,\n            blockers,\n            checkers,\n            variantEnd,\n            mustCapture: false,\n        };\n    }\n    // The following should be identical in all subclasses\n    clone() {\n        var _a, _b;\n        const pos = new this.constructor();\n        pos.board = this.board.clone();\n        pos.pockets = (_a = this.pockets) === null || _a === void 0 ? void 0 : _a.clone();\n        pos.turn = this.turn;\n        pos.castles = this.castles.clone();\n        pos.epSquare = this.epSquare;\n        pos.remainingChecks = (_b = this.remainingChecks) === null || _b === void 0 ? void 0 : _b.clone();\n        pos.halfmoves = this.halfmoves;\n        pos.fullmoves = this.fullmoves;\n        return pos;\n    }\n    equalsIgnoreMoves(other) {\n        var _a, _b;\n        return this.rules === other.rules &&\n            (this.pockets ? this.board.equals(other.board) : this.board.equalsIgnorePromoted(other.board)) &&\n            ((other.pockets && ((_a = this.pockets) === null || _a === void 0 ? void 0 : _a.equals(other.pockets))) || (!this.pockets && !other.pockets)) &&\n            this.turn === other.turn &&\n            this.castles.unmovedRooks.equals(other.castles.unmovedRooks) &&\n            this.legalEpSquare() === other.legalEpSquare() &&\n            ((other.remainingChecks && ((_b = this.remainingChecks) === null || _b === void 0 ? void 0 : _b.equals(other.remainingChecks))) || (!this.remainingChecks && !other.remainingChecks));\n    }\n    toSetup() {\n        var _a, _b;\n        return {\n            board: this.board.clone(),\n            pockets: (_a = this.pockets) === null || _a === void 0 ? void 0 : _a.clone(),\n            turn: this.turn,\n            unmovedRooks: this.castles.unmovedRooks,\n            epSquare: this.legalEpSquare(),\n            remainingChecks: (_b = this.remainingChecks) === null || _b === void 0 ? void 0 : _b.clone(),\n            halfmoves: Math.min(this.halfmoves, 150),\n            fullmoves: Math.min(Math.max(this.fullmoves, 1), 9999),\n        };\n    }\n    isInsufficientMaterial() {\n        return types_1.COLORS.every(color => this.hasInsufficientMaterial(color));\n    }\n    hasDests(ctx) {\n        ctx = ctx || this.ctx();\n        for (const square of this.board[this.turn]) {\n            if (this.dests(square, ctx).nonEmpty())\n                return true;\n        }\n        return this.dropDests(ctx).nonEmpty();\n    }\n    isLegal(move, ctx) {\n        if (types_1.isDrop(move)) {\n            if (!this.pockets || this.pockets[this.turn][move.role] <= 0)\n                return false;\n            if (move.role === 'pawn' && squareSet_1.SquareSet.backranks().has(move.to))\n                return false;\n            return this.dropDests(ctx).has(move.to);\n        }\n        else {\n            if (move.promotion === 'pawn')\n                return false;\n            if (move.promotion === 'king' && this.rules !== 'antichess')\n                return false;\n            if (!!move.promotion !== (this.board.pawn.has(move.from) && squareSet_1.SquareSet.backranks().has(move.to)))\n                return false;\n            const dests = this.dests(move.from, ctx);\n            return dests.has(move.to) || dests.has(this.normalizeMove(move).to);\n        }\n    }\n    isCheck() {\n        const king = this.board.kingOf(this.turn);\n        return util_1.defined(king) && this.kingAttackers(king, util_1.opposite(this.turn), this.board.occupied).nonEmpty();\n    }\n    isEnd(ctx) {\n        if (ctx ? ctx.variantEnd : this.isVariantEnd())\n            return true;\n        return this.isInsufficientMaterial() || !this.hasDests(ctx);\n    }\n    isCheckmate(ctx) {\n        ctx = ctx || this.ctx();\n        return !ctx.variantEnd && ctx.checkers.nonEmpty() && !this.hasDests(ctx);\n    }\n    isStalemate(ctx) {\n        ctx = ctx || this.ctx();\n        return !ctx.variantEnd && ctx.checkers.isEmpty() && !this.hasDests(ctx);\n    }\n    outcome(ctx) {\n        const variantOutcome = this.variantOutcome(ctx);\n        if (variantOutcome)\n            return variantOutcome;\n        ctx = ctx || this.ctx();\n        if (this.isCheckmate(ctx))\n            return { winner: util_1.opposite(this.turn) };\n        else if (this.isInsufficientMaterial() || this.isStalemate(ctx))\n            return { winner: undefined };\n        else\n            return;\n    }\n    allDests(ctx) {\n        ctx = ctx || this.ctx();\n        const d = new Map();\n        if (ctx.variantEnd)\n            return d;\n        for (const square of this.board[this.turn]) {\n            d.set(square, this.dests(square, ctx));\n        }\n        return d;\n    }\n    castlingSide(move) {\n        if (types_1.isDrop(move))\n            return;\n        const delta = move.to - move.from;\n        if (Math.abs(delta) !== 2 && !this.board[this.turn].has(move.to))\n            return;\n        if (!this.board.king.has(move.from))\n            return;\n        return delta > 0 ? 'h' : 'a';\n    }\n    normalizeMove(move) {\n        const castlingSide = this.castlingSide(move);\n        if (!castlingSide)\n            return move;\n        const rookFrom = this.castles.rook[this.turn][castlingSide];\n        return {\n            from: move.from,\n            to: util_1.defined(rookFrom) ? rookFrom : move.to,\n        };\n    }\n    play(move) {\n        const turn = this.turn;\n        const epSquare = this.epSquare;\n        const castlingSide = this.castlingSide(move);\n        this.epSquare = undefined;\n        this.halfmoves += 1;\n        if (turn === 'black')\n            this.fullmoves += 1;\n        this.turn = util_1.opposite(turn);\n        if (types_1.isDrop(move)) {\n            this.board.set(move.to, { role: move.role, color: turn });\n            if (this.pockets)\n                this.pockets[turn][move.role]--;\n            if (move.role === 'pawn')\n                this.halfmoves = 0;\n        }\n        else {\n            const piece = this.board.take(move.from);\n            if (!piece)\n                return;\n            let epCapture;\n            if (piece.role === 'pawn') {\n                this.halfmoves = 0;\n                if (move.to === epSquare) {\n                    epCapture = this.board.take(move.to + (turn === 'white' ? -8 : 8));\n                }\n                const delta = move.from - move.to;\n                if (Math.abs(delta) === 16 && 8 <= move.from && move.from <= 55) {\n                    this.epSquare = (move.from + move.to) >> 1;\n                }\n                if (move.promotion) {\n                    piece.role = move.promotion;\n                    piece.promoted = true;\n                }\n            }\n            else if (piece.role === 'rook') {\n                this.castles.discardRook(move.from);\n            }\n            else if (piece.role === 'king') {\n                if (castlingSide) {\n                    const rookFrom = this.castles.rook[turn][castlingSide];\n                    if (util_1.defined(rookFrom)) {\n                        const rook = this.board.take(rookFrom);\n                        this.board.set(kingCastlesTo(turn, castlingSide), piece);\n                        if (rook)\n                            this.board.set(rookCastlesTo(turn, castlingSide), rook);\n                    }\n                }\n                this.castles.discardSide(turn);\n                if (castlingSide)\n                    return;\n            }\n            const capture = this.board.set(move.to, piece) || epCapture;\n            if (capture)\n                this.playCaptureAt(move.to, capture);\n        }\n    }\n    legalEpSquare(ctx) {\n        if (!util_1.defined(this.epSquare))\n            return;\n        ctx = ctx || this.ctx();\n        const ourPawns = this.board.pieces(this.turn, 'pawn');\n        const candidates = ourPawns.intersect(attacks_1.pawnAttacks(util_1.opposite(this.turn), this.epSquare));\n        for (const candidate of candidates) {\n            if (this.dests(candidate, ctx).has(this.epSquare))\n                return this.epSquare;\n        }\n        return;\n    }\n}\nexports.Position = Position;\nclass Chess extends Position {\n    constructor(rules) {\n        super(rules || 'chess');\n    }\n    static default() {\n        const pos = new this();\n        pos.board = board_1.Board.default();\n        pos.pockets = undefined;\n        pos.turn = 'white';\n        pos.castles = Castles.default();\n        pos.epSquare = undefined;\n        pos.remainingChecks = undefined;\n        pos.halfmoves = 0;\n        pos.fullmoves = 1;\n        return pos;\n    }\n    static fromSetup(setup) {\n        const pos = new this();\n        pos.board = setup.board.clone();\n        pos.pockets = undefined;\n        pos.turn = setup.turn;\n        pos.castles = Castles.fromSetup(setup);\n        pos.epSquare = pos.validEpSquare(setup.epSquare);\n        pos.remainingChecks = undefined;\n        pos.halfmoves = setup.halfmoves;\n        pos.fullmoves = setup.fullmoves;\n        return pos.validate().map(_ => pos);\n    }\n    clone() {\n        return super.clone();\n    }\n    validate() {\n        if (this.board.occupied.isEmpty())\n            return result_1.Result.err(new PositionError(IllegalSetup.Empty));\n        if (this.board.king.size() !== 2)\n            return result_1.Result.err(new PositionError(IllegalSetup.Kings));\n        if (!util_1.defined(this.board.kingOf(this.turn)))\n            return result_1.Result.err(new PositionError(IllegalSetup.Kings));\n        const otherKing = this.board.kingOf(util_1.opposite(this.turn));\n        if (!util_1.defined(otherKing))\n            return result_1.Result.err(new PositionError(IllegalSetup.Kings));\n        if (this.kingAttackers(otherKing, this.turn, this.board.occupied).nonEmpty())\n            return result_1.Result.err(new PositionError(IllegalSetup.OppositeCheck));\n        if (squareSet_1.SquareSet.backranks().intersects(this.board.pawn))\n            return result_1.Result.err(new PositionError(IllegalSetup.PawnsOnBackrank));\n        return this.validateCheckers();\n    }\n    validateCheckers() {\n        const ourKing = this.board.kingOf(this.turn);\n        if (util_1.defined(ourKing)) {\n            // Multiple sliding checkers aligned with king.\n            const checkers = this.kingAttackers(ourKing, util_1.opposite(this.turn), this.board.occupied);\n            if (checkers.size() > 2 || (checkers.size() === 2 && attacks_1.ray(checkers.first(), checkers.last()).has(ourKing)))\n                return result_1.Result.err(new PositionError(IllegalSetup.ImpossibleCheck));\n            // En passant square aligned with checker and king.\n            if (util_1.defined(this.epSquare)) {\n                for (const checker of checkers) {\n                    if (attacks_1.ray(checker, this.epSquare).has(ourKing))\n                        return result_1.Result.err(new PositionError(IllegalSetup.ImpossibleCheck));\n                }\n            }\n        }\n        return result_1.Result.ok(undefined);\n    }\n    validEpSquare(square) {\n        if (!util_1.defined(square))\n            return;\n        const epRank = this.turn === 'white' ? 5 : 2;\n        const forward = this.turn === 'white' ? 8 : -8;\n        if (util_1.squareRank(square) !== epRank)\n            return;\n        if (this.board.occupied.has(square + forward))\n            return;\n        const pawn = square - forward;\n        if (!this.board.pawn.has(pawn) || !this.board[util_1.opposite(this.turn)].has(pawn))\n            return;\n        return square;\n    }\n    castlingDest(side, ctx) {\n        if (!util_1.defined(ctx.king) || ctx.checkers.nonEmpty())\n            return squareSet_1.SquareSet.empty();\n        const rook = this.castles.rook[this.turn][side];\n        if (!util_1.defined(rook))\n            return squareSet_1.SquareSet.empty();\n        if (this.castles.path[this.turn][side].intersects(this.board.occupied))\n            return squareSet_1.SquareSet.empty();\n        const kingTo = kingCastlesTo(this.turn, side);\n        const kingPath = attacks_1.between(ctx.king, kingTo);\n        const occ = this.board.occupied.without(ctx.king);\n        for (const sq of kingPath) {\n            if (this.kingAttackers(sq, util_1.opposite(this.turn), occ).nonEmpty())\n                return squareSet_1.SquareSet.empty();\n        }\n        const rookTo = rookCastlesTo(this.turn, side);\n        const after = this.board.occupied.toggle(ctx.king).toggle(rook).toggle(rookTo);\n        if (this.kingAttackers(kingTo, util_1.opposite(this.turn), after).nonEmpty())\n            return squareSet_1.SquareSet.empty();\n        return squareSet_1.SquareSet.fromSquare(rook);\n    }\n    canCaptureEp(pawn, ctx) {\n        if (!util_1.defined(this.epSquare))\n            return false;\n        if (!attacks_1.pawnAttacks(this.turn, pawn).has(this.epSquare))\n            return false;\n        if (!util_1.defined(ctx.king))\n            return true;\n        const captured = this.epSquare + ((this.turn === 'white') ? -8 : 8);\n        const occupied = this.board.occupied.toggle(pawn).toggle(this.epSquare).toggle(captured);\n        return !this.kingAttackers(ctx.king, util_1.opposite(this.turn), occupied).intersects(occupied);\n    }\n    pseudoDests(square, ctx) {\n        if (ctx.variantEnd)\n            return squareSet_1.SquareSet.empty();\n        const piece = this.board.get(square);\n        if (!piece || piece.color !== this.turn)\n            return squareSet_1.SquareSet.empty();\n        let pseudo = attacks_1.attacks(piece, square, this.board.occupied);\n        if (piece.role === 'pawn') {\n            let captureTargets = this.board[util_1.opposite(this.turn)];\n            if (util_1.defined(this.epSquare))\n                captureTargets = captureTargets.with(this.epSquare);\n            pseudo = pseudo.intersect(captureTargets);\n            const delta = this.turn === 'white' ? 8 : -8;\n            const step = square + delta;\n            if (0 <= step && step < 64 && !this.board.occupied.has(step)) {\n                pseudo = pseudo.with(step);\n                const canDoubleStep = this.turn === 'white' ? (square < 16) : (square >= 64 - 16);\n                const doubleStep = step + delta;\n                if (canDoubleStep && !this.board.occupied.has(doubleStep)) {\n                    pseudo = pseudo.with(doubleStep);\n                }\n            }\n            return pseudo;\n        }\n        else {\n            pseudo = pseudo.diff(this.board[this.turn]);\n        }\n        if (square === ctx.king)\n            return pseudo.union(this.castlingDest('a', ctx)).union(this.castlingDest('h', ctx));\n        else\n            return pseudo;\n    }\n    dests(square, ctx) {\n        ctx = ctx || this.ctx();\n        if (ctx.variantEnd)\n            return squareSet_1.SquareSet.empty();\n        const piece = this.board.get(square);\n        if (!piece || piece.color !== this.turn)\n            return squareSet_1.SquareSet.empty();\n        let pseudo, legal;\n        if (piece.role === 'pawn') {\n            pseudo = attacks_1.pawnAttacks(this.turn, square).intersect(this.board[util_1.opposite(this.turn)]);\n            const delta = this.turn === 'white' ? 8 : -8;\n            const step = square + delta;\n            if (0 <= step && step < 64 && !this.board.occupied.has(step)) {\n                pseudo = pseudo.with(step);\n                const canDoubleStep = this.turn === 'white' ? (square < 16) : (square >= 64 - 16);\n                const doubleStep = step + delta;\n                if (canDoubleStep && !this.board.occupied.has(doubleStep)) {\n                    pseudo = pseudo.with(doubleStep);\n                }\n            }\n            if (util_1.defined(this.epSquare) && this.canCaptureEp(square, ctx)) {\n                const pawn = this.epSquare - delta;\n                if (ctx.checkers.isEmpty() || ctx.checkers.singleSquare() === pawn) {\n                    legal = squareSet_1.SquareSet.fromSquare(this.epSquare);\n                }\n            }\n        }\n        else if (piece.role === 'bishop')\n            pseudo = attacks_1.bishopAttacks(square, this.board.occupied);\n        else if (piece.role === 'knight')\n            pseudo = attacks_1.knightAttacks(square);\n        else if (piece.role === 'rook')\n            pseudo = attacks_1.rookAttacks(square, this.board.occupied);\n        else if (piece.role === 'queen')\n            pseudo = attacks_1.queenAttacks(square, this.board.occupied);\n        else\n            pseudo = attacks_1.kingAttacks(square);\n        pseudo = pseudo.diff(this.board[this.turn]);\n        if (util_1.defined(ctx.king)) {\n            if (piece.role === 'king') {\n                const occ = this.board.occupied.without(square);\n                for (const to of pseudo) {\n                    if (this.kingAttackers(to, util_1.opposite(this.turn), occ).nonEmpty())\n                        pseudo = pseudo.without(to);\n                }\n                return pseudo.union(this.castlingDest('a', ctx)).union(this.castlingDest('h', ctx));\n            }\n            if (ctx.checkers.nonEmpty()) {\n                const checker = ctx.checkers.singleSquare();\n                if (!util_1.defined(checker))\n                    return squareSet_1.SquareSet.empty();\n                pseudo = pseudo.intersect(attacks_1.between(checker, ctx.king).with(checker));\n            }\n            if (ctx.blockers.has(square))\n                pseudo = pseudo.intersect(attacks_1.ray(square, ctx.king));\n        }\n        if (legal)\n            pseudo = pseudo.union(legal);\n        return pseudo;\n    }\n    isVariantEnd() {\n        return false;\n    }\n    variantOutcome(_ctx) {\n        return;\n    }\n    hasInsufficientMaterial(color) {\n        if (this.board[color].intersect(this.board.pawn.union(this.board.rooksAndQueens())).nonEmpty())\n            return false;\n        if (this.board[color].intersects(this.board.knight)) {\n            return this.board[color].size() <= 2 &&\n                this.board[util_1.opposite(color)].diff(this.board.king).diff(this.board.queen).isEmpty();\n        }\n        if (this.board[color].intersects(this.board.bishop)) {\n            const sameColor = !this.board.bishop.intersects(squareSet_1.SquareSet.darkSquares()) ||\n                !this.board.bishop.intersects(squareSet_1.SquareSet.lightSquares());\n            return sameColor && this.board.pawn.isEmpty() && this.board.knight.isEmpty();\n        }\n        return true;\n    }\n}\nexports.Chess = Chess;\n//# sourceMappingURL=chess.js.map"],"sourceRoot":""}